name: Build Docker Images

on:
  workflow_dispatch:
    inputs:
      gitTag:
        description: "Git tag of the urlwatch repository"
        required: true

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_REPOSITORY: xjonathanlei/urlwatch

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v1.6.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Enable Docker Buildx
        run: |
          jq '. + {"experimental":"enabled"}' ~/.docker/config.json > ~/.docker/config_new.json
          mv ~/.docker/config_new.json ~/.docker/config.json
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          sudo systemctl restart docker
          docker buildx create --name multi_builder
          docker buildx use multi_builder

      - name: Determine Image Version
        run: |
          echo "VERSION=${{ github.event.inputs.gitTag }}" >> $GITHUB_ENV

      - name: Clone urlwatch Repository
        run: |
          git clone --recursive -b "${{ github.event.inputs.gitTag }}" --depth 1 https://github.com/thp/urlwatch.git

      - name: Build linux/amd64 Image
        run: |
          docker buildx build -t ${DOCKER_REPOSITORY}:${VERSION}-amd64 -f ./urlwatch/Dockerfile --platform linux/amd64 --output=type=docker ./urlwatch

      - name: Build linux/arm64 Image
        run: |
          docker buildx build -t ${DOCKER_REPOSITORY}:${VERSION}-arm64 -f ./urlwatch/Dockerfile --platform linux/arm64 --output=type=docker ./urlwatch

      - name: Push Multi-Arch Images
        run: |
          docker push ${DOCKER_REPOSITORY}:${VERSION}-amd64
          docker push ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:${VERSION} \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:latest \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest push ${DOCKER_REPOSITORY}:${VERSION}
          docker manifest push ${DOCKER_REPOSITORY}:latest
